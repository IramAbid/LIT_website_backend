generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//--------------------------------------------------------------------
//##### ../prisma/schema/achievement.schema                                                       
//--------------------------------------------------------------------
// Achievement schema
model Achievement {
  id          Int      @id @default(autoincrement())
  author      User     @relation(fields: [userId], references: [id])
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  userId      Int
}

//--------------------------------------------------------------------
//##### ../prisma/schema/auth.schema                                                       
//--------------------------------------------------------------------
// Auth schema
model Auth {
  id           Int      @id @default(autoincrement())
  userId       Int      @unique
  user         User     @relation(fields: [userId], references: [id])
  type         String
  email        String
  password     String
  is_active    Boolean
  is_logged_in Boolean
  auth_token   String
  auth_timeout DateTime
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now()) @updatedAt
}

//--------------------------------------------------------------------
//##### ../prisma/schema/blog.schema                                                       
//--------------------------------------------------------------------
// Blog schema
model Blog {
  id          Int      @id @default(autoincrement())
  author      User     @relation(fields: [userId], references: [id])
  titleOfBlog String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  userId      Int
}

//--------------------------------------------------------------------
//##### ../prisma/schema/course.schema                                                       
//--------------------------------------------------------------------
// Course schema
model Course {
  id        Int      @id @default(autoincrement())
  course    String
  offeredBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  users     User[]
}

//--------------------------------------------------------------------
//##### ../prisma/schema/file.schema                                                       
//--------------------------------------------------------------------
// File schema
model File {
  id         Int      @id @default(autoincrement())
  resource   Resource @relation(fields: [resourceId], references: [id])
  title      String
  url        String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  resourceId Int
}


//--------------------------------------------------------------------
//##### ../prisma/schema/resource.schema                                                       
//--------------------------------------------------------------------
// Resource schema
model Resource {
  id          Int      @id @default(autoincrement())
  author      User     @relation(fields: [userId], references: [id])
  description String
  title       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  userId      Int
  files       File[]
}

//--------------------------------------------------------------------
//##### ../prisma/schema/user.schema                                                       
//--------------------------------------------------------------------
// User schema
model User {
  id           Int           @id @default(autoincrement())
  firstName    String
  lastName     String
  gender       String
  type         UserType      @relation(fields: [typeId], references: [id])
  course       Course?       @relation(fields: [courseId], references: [id])
  branch       String
  year         Int
  contact      String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
  typeId       Int
  courseId     Int?
  auth         Auth?
  achievements Achievement[]
  blogs        Blog[]
  resources    Resource[]
}

//--------------------------------------------------------------------
//##### ../prisma/schema/user_type.schema                                                       
//--------------------------------------------------------------------
// UserType schema
model UserType {
  id        Int      @id @default(autoincrement())
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  users     User[]
}

